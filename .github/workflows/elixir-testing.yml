name: Elixir Testing

# Define workflow that runs when changes are pushed to the
# `main` branch or pushed to a PR branch that targets the `main`
# branch. Change the branch name if your project uses a
# different name for the main branch like "master" or "production".
on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    # Sets the ENV `MIX_ENV` to `test` for running tests
    env:
      MIX_ENV: test

    runs-on: ubuntu-22.04
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Detect system info
      uses: kenchan0130/actions-system-info@master
      id: system-info

    - name: Setup OTP/Elixir
      uses: erlef/setup-beam@v1
      id: setup-beam
      with:
        version-type: strict
        version-file: .tool-versions

    - name: Cache Elixir deps and build
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: "mix-cache-\
              ${{ steps.system-info.outputs.name }}-\
              ${{ steps.system-info.outputs.release }}-\
              ${{ steps.setup-beam.outputs.otp-version }}-\
              elixir-${{ steps.setup-beam.outputs.elixir-version }}-\
              mix.lock-${{ hashFiles('**/mix.lock') }}"

    - name: Install Elixir dependencies
      run: mix deps.get

    - name: Compiles
      run: mix compile

    - name: Check Formatting
      run: mix format --check-formatted "lib/**/*.{ex,exs}" "test/**/*.{ex,exs}"

    - name: Configure Nebulex
      run: mix nbx.setup

    - name: Run tests
      run: mix test
